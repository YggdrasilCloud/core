name: Link PRs to Release

on:
  release:
    types: [prereleased, released]

jobs:
  link-prs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Link merged PRs to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          RELEASE_URL="${{ github.event.release.html_url }}"
          RELEASE_TYPE="${{ github.event.release.prerelease && 'pre-release' || 'release' }}"

          echo "Processing $RELEASE_TYPE: $TAG_NAME"
          echo "Release URL: $RELEASE_URL"

          # Get the previous release tag
          PREVIOUS_TAG=$(gh release list \
            --repo ${{ github.repository }} \
            --limit 100 \
            --json tagName \
            --jq '.[] | select(.tagName != "'$TAG_NAME'") | .tagName' \
            | head -n 1)

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous release found, using first commit"
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi

          echo "Comparing $PREVIOUS_TAG...$TAG_NAME"

          # Get all commits between previous and current release
          if git rev-parse "$PREVIOUS_TAG" >/dev/null 2>&1; then
            COMMITS=$(git log $PREVIOUS_TAG..$TAG_NAME --pretty=format:"%H")
          else
            COMMITS=$(git log $TAG_NAME --pretty=format:"%H")
          fi

          if [ -z "$COMMITS" ]; then
            echo "No commits found in this release"
            exit 0
          fi

          # Track processed PRs to avoid duplicates
          PROCESSED_PRS=""

          # For each commit, find associated PRs
          for COMMIT in $COMMITS; do
            # Find PR number from commit message (formats: "Merge pull request #123" or "(#123)")
            PR_NUMBER=$(git log --format=%B -n 1 $COMMIT | grep -oP '(?<=#)\d+' | head -n 1)

            if [ -n "$PR_NUMBER" ] && ! echo "$PROCESSED_PRS" | grep -q " $PR_NUMBER "; then
              echo "Found PR #$PR_NUMBER for commit $COMMIT"
              PROCESSED_PRS="$PROCESSED_PRS $PR_NUMBER "

              # Add release comment to PR
              gh pr comment $PR_NUMBER \
                --repo ${{ github.repository }} \
                --body "âœ… Released in [$TAG_NAME]($RELEASE_URL)" 2>/dev/null || {
                echo "Failed to comment on PR #$PR_NUMBER (may not exist or already closed)"
              }
            fi
          done

          echo "Finished linking PRs to $RELEASE_TYPE $TAG_NAME"
