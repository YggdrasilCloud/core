# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    photo.max_file_size: '%env(int:PHOTO_MAX_FILE_SIZE)%'
    photo.allowed_mime_types: '%env(csv:PHOTO_ALLOWED_MIME_TYPES)%'
    photo.storage_path: '%kernel.project_dir%/var/storage/photos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Photo Bounded Context - Repository bindings
    App\Photo\Domain\Repository\FolderRepositoryInterface:
        class: App\Photo\Infrastructure\Persistence\Doctrine\Repository\DoctrineFolderRepository

    App\Photo\Domain\Repository\PhotoRepositoryInterface:
        class: App\Photo\Infrastructure\Persistence\Doctrine\Repository\DoctrinePhotoRepository

    # Photo Bounded Context - Storage binding
    App\Photo\Domain\Port\FileStorageInterface:
        class: App\Photo\Infrastructure\Storage\LocalFileSystemStorage
        arguments:
            $storagePath: '%kernel.project_dir%/var/storage/photos'

    # Photo Bounded Context - File validator
    App\Photo\Domain\Service\FileValidator:
        arguments:
            $maxFileSize: '%photo.max_file_size%'
            $allowedMimeTypes: '%photo.allowed_mime_types%'

    # Photo Bounded Context - Query handlers
    App\Photo\Application\Query\GetPhotoFile\GetPhotoFileHandler:
        arguments:
            $storageBasePath: '%photo.storage_path%'

    App\Photo\Application\Query\GetPhotoThumbnail\GetPhotoThumbnailHandler:
        arguments:
            $storageBasePath: '%photo.storage_path%'

    # Photo Bounded Context - Thumbnail generator
    App\Photo\Domain\Service\ThumbnailGenerator:
        arguments:
            $storagePath: '%photo.storage_path%'

    # Commands
    App\Command\SeedTestDataCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'
